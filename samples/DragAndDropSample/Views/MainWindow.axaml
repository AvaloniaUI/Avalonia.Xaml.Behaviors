<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:DragAndDropSample.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:b="using:DragAndDropSample.Behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="650" d:DesignHeight="450"
        x:Class="DragAndDropSample.Views.MainWindow"
        Icon="/Assets/avalonia-logo.ico"
        Width="650" WindowStartupLocation="CenterScreen"
        Title="DragAndDropSample">

  <Design.DataContext>
    <vm:MainWindowViewModel />
  </Design.DataContext>

  <Window.Resources>
    <!-- IconGrabber, MIT License, author: Primer, taken from: https://www.svgrepo.com/svg/347759/grabber -->
    <PathGeometry x:Key="IconGrabberGeometry">M15 18a1 1 0 100-2 1 1 0 000 2zm1-6a1 1 0 11-2 0 1 1 0 012 0zm-7 6a1 1 0 100-2 1 1 0 000 2zm0-5a1 1 0 100-2 1 1 0 000 2zm7-6a1 1 0 11-2 0 1 1 0 012 0zM9 8a1 1 0 100-2 1 1 0 000 2z</PathGeometry>
    <GeometryDrawing x:Key="IconGrabber" Brush="Black" Geometry="{StaticResource IconGrabberGeometry}" />
  </Window.Resources>

  <Window.Styles>

    <Style Selector="ListBox.ItemsDragAndDrop">
      <Style.Resources>
        <b:ItemsListBoxDropHandler x:Key="ItemsListBoxDropHandler" />
      </Style.Resources>
      <Setter Property="(Interaction.Behaviors)">
        <BehaviorCollectionTemplate>
          <BehaviorCollection>
            <ContextDropBehavior Handler="{StaticResource ItemsListBoxDropHandler}" />
          </BehaviorCollection>
        </BehaviorCollectionTemplate>
      </Setter>
    </Style>

    <Style Selector="ListBox.ItemsDragAndDrop ListBoxItem">
      <Setter Property="HorizontalContentAlignment" Value="Stretch" />
      <Setter Property="(Interaction.Behaviors)">
        <BehaviorCollectionTemplate>
          <BehaviorCollection>
            <ContextDragBehavior HorizontalDragThreshold="3" VerticalDragThreshold="3" />
          </BehaviorCollection>
        </BehaviorCollectionTemplate>
      </Setter>
    </Style>

    <Style Selector="ListBox.NodesDragAndDrop">
      <Style.Resources>
        <b:NodesListBoxDropHandler x:Key="NodesListBoxDropHandler" />
      </Style.Resources>
      <Setter Property="(Interaction.Behaviors)">
        <BehaviorCollectionTemplate>
          <BehaviorCollection>
            <ContextDropBehavior Handler="{StaticResource NodesListBoxDropHandler}" />
          </BehaviorCollection>
        </BehaviorCollectionTemplate>
      </Setter>
    </Style>

    <Style Selector="ListBox.NodesDragAndDrop ListBoxItem">
      <Setter Property="HorizontalContentAlignment" Value="Stretch" />
      <Setter Property="(Interaction.Behaviors)">
        <BehaviorCollectionTemplate>
          <BehaviorCollection>
            <ContextDragBehavior />
          </BehaviorCollection>
        </BehaviorCollectionTemplate>
      </Setter>
    </Style>

    <Style Selector="TreeView.NodesDragAndDrop">
      <Style.Resources>
        <b:NodesTreeViewDropHandler x:Key="NodesTreeViewDropHandler" />
      </Style.Resources>
      <Setter Property="(Interaction.Behaviors)">
        <BehaviorCollectionTemplate>
          <BehaviorCollection>
            <ContextDropBehavior Handler="{StaticResource NodesTreeViewDropHandler}" />
          </BehaviorCollection>
        </BehaviorCollectionTemplate>
      </Setter>
    </Style>

    <Style Selector="TreeView.NodesDragAndDrop TreeViewItem">
      <Setter Property="IsExpanded" Value="True" />
      <Setter Property="(Interaction.Behaviors)">
        <BehaviorCollectionTemplate>
          <BehaviorCollection>
            <ContextDragBehavior />
          </BehaviorCollection>
        </BehaviorCollectionTemplate>
      </Setter>
    </Style>

    <Style Selector="DataGrid.DragAndDrop">
      <Style.Resources>
        <b:ItemsDataGridDropHandler x:Key="ItemsDataGridDropHandler" />
      </Style.Resources>
      <Setter
        Property="RowHeaderWidth"
        Value="24" />
      <Setter Property="(Interaction.Behaviors)">
        <BehaviorCollectionTemplate>
          <BehaviorCollection>
            <ContextDropBehavior Handler="{StaticResource ItemsDataGridDropHandler}" />
          </BehaviorCollection>
        </BehaviorCollectionTemplate>
      </Setter>
    </Style>

    <Style Selector="DataGrid.DragAndDrop DataGridRow.DraggingUp">
      <Setter Property="AdornerLayer.Adorner">
        <Template>
          <Border BorderThickness="0 2 0 0" BorderBrush="{DynamicResource SystemAccentColor}"/>
        </Template>
      </Setter>
    </Style>
  
    <Style Selector="DataGrid.DragAndDrop DataGridRow.DraggingDown">
      <Setter Property="AdornerLayer.Adorner">
        <Template>
          <Border BorderThickness="0 0 0 2" BorderBrush="{DynamicResource SystemAccentColor}"/>
        </Template>
      </Setter>
    </Style>
  
    <!-- This makes only the DataGridRowHeader available for dragging, instead of making the entire row draggable -->
    <!-- Which prevents a conflict between text selection in a cell and drag-and-drop -->
    <Style Selector="DataGrid.DragAndDrop DataGridRowHeader">
      <Setter Property="(Interaction.Behaviors)">
        <BehaviorCollectionTemplate>
          <BehaviorCollection>
            <b:ContextDragWithDirectionBehavior HorizontalDragThreshold="3" VerticalDragThreshold="3" />
          </BehaviorCollection>
        </BehaviorCollectionTemplate>
      </Setter>
      <Setter Property="Content">
        <Template>
          <Image
            Margin="12,0,12,0"
            Width="12"
            Height="12"
            VerticalAlignment="Center"
            HorizontalAlignment="Center">
            <Image.Source>
              <!-- Use your own image here, I used this: https://www.svgrepo.com/svg/347759/grabber -->
              <DrawingImage Drawing="{StaticResource IconGrabber}" />
            </Image.Source>
          </Image>
        </Template>
      </Setter>
    </Style>

    <Style Selector="DataGrid.ItemsDragAndDrop">
      <Style.Resources>
        <b:ItemsDataGridDropHandler x:Key="ItemsDataGridDropHandler" />
      </Style.Resources>
      <Setter Property="(Interaction.Behaviors)">
        <BehaviorCollectionTemplate>
          <BehaviorCollection>
            <ContextDropBehavior Handler="{StaticResource ItemsDataGridDropHandler}" />
          </BehaviorCollection>
        </BehaviorCollectionTemplate>
      </Setter>
    </Style>
    
  </Window.Styles>

  <TabControl>

    <TabItem Header="TreeView">
      <Grid ColumnDefinitions="*,8,*">
        <TreeView ItemsSource="{Binding Nodes}"
                  Classes="NodesDragAndDrop"
                  Grid.Column="0">
          <TreeView.ItemTemplate>
            <TreeDataTemplate DataType="vm:NodeViewModel" ItemsSource="{Binding Nodes}">
              <TextBlock Text="{Binding Title}" />
            </TreeDataTemplate>
          </TreeView.ItemTemplate>
        </TreeView>
        <GridSplitter Width="8" ResizeDirection="Columns" ResizeBehavior="PreviousAndNext" Background="Transparent" Grid.Column="1"/>
        <ListBox ItemsSource="{Binding Nodes}"
                 Classes="NodesDragAndDrop"
                 Grid.Column="2">
          <ListBox.ItemTemplate>
            <DataTemplate DataType="vm:NodeViewModel">
              <TextBlock Text="{Binding Title}" />
            </DataTemplate>
          </ListBox.ItemTemplate>
        </ListBox>
      </Grid>
    </TabItem>

    <TabItem Header="ListBox">
      <ListBox ItemsSource="{Binding Items}"
               Classes="ItemsDragAndDrop">
        <ListBox.ItemTemplate>
          <DataTemplate DataType="vm:ItemViewModel">
            <TextBlock Text="{Binding Title}" />
          </DataTemplate>
        </ListBox.ItemTemplate>
      </ListBox>
    </TabItem>

    <TabItem Header="DataGrid">
      <Grid>
        <DataGrid
          AutoGenerateColumns="False"
          ItemsSource="{Binding Items}"
          CanUserResizeColumns="True"
          HeadersVisibility="All"
          Classes="DragAndDrop ItemsDragAndDrop">
          <DataGrid.Columns>
            <DataGridTextColumn
              Width="*"
              Binding="{Binding Title}">
            <DataGridTextColumn.Header>
              <TextBlock Text="Title"/>
            </DataGridTextColumn.Header>
          </DataGridTextColumn>
          </DataGrid.Columns>
        </DataGrid>
      </Grid>
    </TabItem>

  </TabControl>

</Window>
