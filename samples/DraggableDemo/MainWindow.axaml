<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
        xmlns:id="clr-namespace:Avalonia.Xaml.Interactions.Draggable;assembly=Avalonia.Xaml.Interactions.Draggable"
        xmlns:local="clr-namespace:DraggableDemo"
        xmlns:models="clr-namespace:DraggableDemo.Models"
        mc:Ignorable="d" d:DesignWidth="1200" d:DesignHeight="550"
        x:Class="DraggableDemo.MainWindow"
        x:CompileBindings="True" x:DataType="local:MainWindow"
        WindowState="Normal" WindowStartupLocation="CenterScreen"
        Width="1200" Height="550"
        Title="Draggable Controls Demo">

  <Window.Styles>
    <StyleInclude Source="avares://Avalonia.Xaml.Interactions.Draggable/Styles.axaml" />
    <StyleInclude Source="/Styles/Custom.axaml" />
    <Style Selector="TextBlock">
      <Setter Property="HorizontalAlignment" Value="Center" />
      <Setter Property="VerticalAlignment" Value="Center" />
      <Setter Property="ClipToBounds" Value="False" />
    </Style>
  </Window.Styles>

  <TabControl Classes="draggable">

    <TabItem Header="TabControl">
      <TabControl Classes="draggable custom" Background="LightGray">
        <TabControl.Styles>
          <Style Selector="TabItem:not(:dragging)">
            <Setter Property="Transitions">
              <Setter.Value>
                  <Transitions>
                    <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.1" />
                  </Transitions>
              </Setter.Value>
            </Setter>
          </Style>
        </TabControl.Styles>
        <TabItem Header="Tab1">
          <TextBlock Text="Tab1" />
        </TabItem>
        <TabItem Header="Tab2">
          <TextBlock Text="Tab2" />
        </TabItem>
        <TabItem Header="Tab3">
          <TextBlock Text="Tab3" />
        </TabItem>
      </TabControl>
    </TabItem>

    <TabItem Header="TabControl (Items)">
      <TabControl Classes="draggableVirtualizing custom" ItemsSource="{Binding Items}" Background="LightGray" >
        <TabControl.Styles>
          <Style Selector="TabItem:not(:dragging)">
            <Setter Property="Transitions">
              <Setter.Value>
                <Transitions>
                  <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.1" />
                </Transitions>
              </Setter.Value>
            </Setter>
          </Style>
        </TabControl.Styles>
      </TabControl>
    </TabItem>

    <TabItem Header="ListBox">
      <ListBox Classes="draggable">
        <ListBox.Styles>
          <Style Selector="ListBoxItem > TextBlock">
            <Setter Property="HorizontalAlignment" Value="Left" />
          </Style>
          <Style Selector="ListBoxItem:not(:dragging)">
            <Setter Property="Transitions">
              <Setter.Value>
                <Transitions>
                  <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.1" />
                </Transitions>
              </Setter.Value>
            </Setter>
          </Style>
        </ListBox.Styles>
        <ListBoxItem>
          <TextBlock Text="Item1" />
        </ListBoxItem>
        <ListBoxItem>
          <TextBlock Text="Item2" />
        </ListBoxItem>
        <ListBoxItem>
          <TextBlock Text="Item3" />
        </ListBoxItem>
      </ListBox>
    </TabItem>

    <TabItem Header="ListBox (Items)">
      <ListBox Classes="draggableVirtualizing" ItemsSource="{Binding Strings}">
        <ListBox.Styles>
          <Style Selector="ListBoxItem > TextBlock">
            <Setter Property="HorizontalAlignment" Value="Left" />
          </Style>
          <Style Selector="ListBoxItem:not(:dragging)">
            <Setter Property="Transitions">
              <Setter.Value>
                <Transitions>
                  <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.1" />
                </Transitions>
              </Setter.Value>
            </Setter>
          </Style>
        </ListBox.Styles>
      </ListBox>
    </TabItem>

    <TabItem Header="Canvas">
      <Canvas Classes="draggable" Width="500" Height="300" Background="LightGray">
        <Canvas.Styles>
          <Style Selector="Canvas > :is(Control):dragging">
            <Setter Property="ZIndex" Value="1" />
          </Style>
        </Canvas.Styles>
        <Rectangle Fill="Blue" Width="60" Height="40" Canvas.Left="20" Canvas.Top="10" />
        <Ellipse Fill="Red" Width="50" Height="50" Canvas.Left="120" Canvas.Top="30" />
        <TextBlock Text="Hello from Avalonia" Background="Transparent" Canvas.Left="40" Canvas.Top="100" />
        <Panel Background="Purple" Width="80" Height="70" Canvas.Left="250" Canvas.Top="100" />
      </Canvas>
    </TabItem>

    <TabItem Header="Canvas (Items)">
      <ItemsControl Classes="draggable" ItemsSource="{Binding Items}" Width="500" Height="300" Background="LightGray">
        <ItemsControl.Styles>
          <Style Selector="ItemsControl > ContentPresenter" x:DataType="models:Item">
            <Setter Property="(Canvas.Left)" Value="{Binding X}" />
            <Setter Property="(Canvas.Top)" Value="{Binding Y}" />
          </Style>
          <Style Selector="ItemsControl > ContentPresenter:dragging">
            <Setter Property="Opacity" Value="0.5" />
            <Setter Property="ZIndex" Value="1" />
          </Style>
        </ItemsControl.Styles>
        <ItemsControl.ItemsPanel>
          <ItemsPanelTemplate>
            <Canvas />
          </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>
        <ItemsControl.DataTemplates>
          <DataTemplate DataType="models:Item">
            <Rectangle Fill="Black" Width="30" Height="30" />
          </DataTemplate>
        </ItemsControl.DataTemplates>
      </ItemsControl>
    </TabItem>

    <TabItem Header="Canvas (Advanced)">
      <Grid Margin="20" ColumnDefinitions="*,*" RowDefinitions="Auto,*">
        <TextBlock Grid.Column="0" Grid.Row="0" Width="500" TextWrapping="Wrap">
          Set a control's draggability by setting or binding to AttachedProperty:<LineBreak />
          id:CanvasDragBehavior.IsDraggable=&quot;True/False&quot;<LineBreak /><LineBreak />
          This property must be set on a direct child of your Canvas or the Root-Control of your DataTemplate if used in an ItemsControl.
        </TextBlock>
        <Canvas Classes="draggable" Grid.Column="0" Grid.Row="1" Width="500" Height="300" Background="LightGray">
          <Canvas.Styles>
            <Style Selector="Canvas > :is(Control):dragging">
              <Setter Property="ZIndex" Value="1" />
            </Style>
          </Canvas.Styles>
          <Rectangle Fill="Blue" Width="60" Height="40" Canvas.Left="20" Canvas.Top="10" />
          <Ellipse Fill="Red" Width="50" Height="50" Canvas.Left="120" Canvas.Top="30" />
          <TextBlock Text="You can drag me!" Background="Transparent" Canvas.Left="40" Canvas.Top="140" />
          <TextBlock Text="You can't drag me at all!" id:CanvasDragBehavior.IsDraggable="False" Background="Transparent" Canvas.Left="40" Canvas.Top="160" />
          <StackPanel Orientation="Horizontal" Background="Transparent" id:CanvasDragBehavior.IsDraggable="{Binding #Draggable_Toggle_1.IsChecked}" Canvas.Left="40" Canvas.Top="180">
            <TextBlock Text="You can toggle my draggabillity!" id:CanvasDragBehavior.IsDragHandle="True" />
            <ToggleSwitch x:Name="Draggable_Toggle_1" />
          </StackPanel>
          <StackPanel Orientation="Horizontal">

          </StackPanel>
          <Panel Background="Purple" Width="80" Height="70" Canvas.Left="250" Canvas.Top="100" />
        </Canvas>
        <StackPanel Grid.Column="1" Grid.Row="0"  Width="500">
          <TextBlock TextWrapping="Wrap">
            Specifiy a child/descendant Control as DragHandle with AttachedProperty:<LineBreak />
            id:CanvasDragBehavior.IsDragHandle=&quot;True/False&quot;<LineBreak /><LineBreak />
            If at least one descendant has this property set to true, the control can only be dragged by that DragHandle.<LineBreak />
            Multiple DragHandles can be defined on the same Object!<LineBreak />
          </TextBlock>
          <StackPanel Orientation="Horizontal" Spacing="5" Background="Transparent" HorizontalAlignment="Center">
            <TextBlock Text="Toggle draggabillity for all items!" />
            <ToggleSwitch x:Name="Draggable_Toggle_2" IsChecked="True" />
          </StackPanel>
        </StackPanel>
        <ItemsControl Classes="draggable" Grid.Column="1" Grid.Row="1" ItemsSource="{Binding Items}" Width="500" Height="300" Background="LightGray">
          <ItemsControl.Styles>
            <Style Selector="ItemsControl > ContentPresenter" x:DataType="models:Item">
              <Setter Property="(Canvas.Left)" Value="{Binding X}" />
              <Setter Property="(Canvas.Top)" Value="{Binding Y}" />
            </Style>
            <Style Selector="ItemsControl > ContentPresenter:dragging">
              <Setter Property="Opacity" Value="0.5" />
              <Setter Property="ZIndex" Value="1" />
            </Style>
          </ItemsControl.Styles>
          <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
              <Canvas />
            </ItemsPanelTemplate>
          </ItemsControl.ItemsPanel>
          <ItemsControl.DataTemplates>
            <DataTemplate DataType="models:Item">
              <Panel id:CanvasDragBehavior.IsDraggable="{Binding #Draggable_Toggle_2.IsChecked}">
                <Rectangle Fill="Black" Width="50" Height="50" />
                <TextBlock Text="M" id:CanvasDragBehavior.IsDragHandle="True" Background="AliceBlue" Width="15" Height="15" HorizontalAlignment="Right" VerticalAlignment="Top" />
                <TextBlock Text="M" id:CanvasDragBehavior.IsDragHandle="True" Background="AliceBlue" Width="15" Height="15" HorizontalAlignment="Left" VerticalAlignment="Bottom" />
              </Panel>
            </DataTemplate>
          </ItemsControl.DataTemplates>
        </ItemsControl>
      </Grid>

    </TabItem>

    <TabItem Header="Grid">
      <Grid Classes="draggable" ColumnDefinitions="*,*,*" RowDefinitions="*,*,*" ShowGridLines="True" Width="500" Height="300" Background="LightGray">
        <Grid.Styles>
          <Style Selector="Grid > :is(Control):dragging">
            <Setter Property="Opacity" Value="0.5" />
            <Setter Property="ZIndex" Value="1" />
          </Style>
        </Grid.Styles>
        <Rectangle Fill="Blue" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" />
        <Ellipse Fill="Red" Grid.Column="2" Grid.Row="0" />
        <TextBlock Text="Hello from Avalonia" Background="Transparent" Grid.Column="0" Grid.Row="1" />
        <Panel Background="Purple" Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" />
        <Ellipse Fill="Cyan" Grid.Column="2" Grid.Row="2" />
      </Grid>
    </TabItem>

    <TabItem Header="Grid (Items)">
      <ItemsControl ItemsSource="{Binding Tiles}" Width="800" Height="300" Background="LightGray">
        <ItemsControl.Styles>
          <Style Selector=":is(ItemsControl) > :is(ContentPresenter)">
            <Setter Property="(i:Interaction.Behaviors)">
              <i:BehaviorCollectionTemplate>
                <i:BehaviorCollection>
                  <id:GridDragBehavior CopyColumn="True" CopyRow="True" CopyColumnSpan="True" CopyRowSpan="True" />
                </i:BehaviorCollection>
              </i:BehaviorCollectionTemplate>
            </Setter>
          </Style>
          <Style Selector="ItemsControl > ContentPresenter" x:DataType="models:Tile">
            <Setter Property="(Grid.Column)" Value="{Binding Column}" />
            <Setter Property="(Grid.Row)" Value="{Binding Row}" />
            <Setter Property="(Grid.ColumnSpan)" Value="{Binding ColumnSpan}" />
            <Setter Property="(Grid.RowSpan)" Value="{Binding RowSpan}" />
          </Style>
          <Style Selector="ItemsControl > ContentPresenter:dragging">
            <Setter Property="Opacity" Value="0.5" />
            <Setter Property="ZIndex" Value="1" />
          </Style>
        </ItemsControl.Styles>
        <ItemsControl.ItemsPanel>
          <ItemsPanelTemplate>
            <Grid ShowGridLines="True" ColumnDefinitions="*,*,*" RowDefinitions="*,*" />
          </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>
        <ItemsControl.DataTemplates>
          <DataTemplate DataType="models:Tile">
            <Border Background="{Binding Background}" CornerRadius="6" Margin="6" BorderBrush="Gray" BorderThickness="2">
              <Label Content="{Binding Title}" HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Border>
          </DataTemplate>
        </ItemsControl.DataTemplates>
      </ItemsControl>
    </TabItem>

  </TabControl>

</Window>
